/*package whatever //do not write package name here */

import java.util.*;

 class Subrectangle {
    
    static class Rec{
        
        static int maxsum;
        static int maxleft;
        static int maxright;
        static int maxup;
        static int maxdown;
    }
    
    static int SubrecSize(int a[][]){
        
        for(int l=0;l<a[0].length;l++){
                    int p[]=new int[a.length];

            for(int r=l;r<a[0].length;r++){
                
                for(int j=0;j<a.length;j++){
                        p[j]=p[j]+a[j][r];
                }
                            if(kadane(p))
                            {
                                Rec.maxleft=l;
                                Rec.maxright=r;
                            }

            }
        }
        return Rec.maxsum;
    }
    static boolean kadane(int p[]){
        int currsum=0;
        int ms=Integer.MIN_VALUE;
        int mu=0,u=0,e=0;
        for(int i=0;i<p.length;i++){
            currsum+=p[i];
            if(currsum>ms){
                mu=u;
                ms=currsum;
                e=i;
            }
            if(currsum<0){
                currsum=0;
                u=i+1;
            }
        }
        if(ms>Rec.maxsum)
        {
            Rec.maxsum=ms;
            Rec.maxup=mu;
            Rec.maxdown=e;
            return true;
        }
        else
        return false;
        
    }
	public static void main (String[] args) {
	    int a[][]={{2,1,-3,-4,5},{0,6,3,4,1},{2,-2,-1,4,-5},{-3,3,1,0,3}};
		System.out.println("max sum"+SubrecSize(a));
        System.out.println("left bound "+Rec.maxleft);
        System.out.println("right bound "+Rec.maxright);
        System.out.println("upper bound "+Rec.maxup);
        System.out.println("lower bound "+Rec.maxdown);
	}
}
